{
  parserClass="com.github.xepozz.crontab.language.parser.CrontabParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Crontab"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.xepozz.crontab.language.psi"
  psiImplPackage="com.github.xepozz.crontab.language.psi.impl"

  elementTypeHolderClass="com.github.xepozz.crontab.language.psi.CrontabTypes"
  elementTypeClass="com.github.xepozz.crontab.language.psi.CrontabElementType"
  tokenTypeClass="com.github.xepozz.crontab.language.psi.CrontabTokenType"

  psiImplUtilClass="com.github.xepozz.crontab.language.psi.impl.CrontabImplUtil"
}

crontabFile ::= item_*

private item_ ::= (cronExpression | variableDefinition | COMMENT | NEWLINE)

cronExpression ::= (SCHEDULE COMMAND)
{
    pin=1
}

variableDefinition ::= (VARIABLE_NAME EQUAL_SIGN VARIABLE_VALUE)
{
    pin=1
    extends="com.github.xepozz.crontab.language.psi.impl.CrontabVariableBaseImpl"
}
VARIABLE_NAME ::= IDENTIFIER
VARIABLE_VALUE ::= CONTENT

SCHEDULE ::= TIME_POINTER TIME_POINTER TIME_POINTER TIME_POINTER TIME_POINTER
{
    pin=1
}

TIME_POINTER ::= TIME_PERIODIC | TIME_RANGE_STEP | TIME_LIST | TIME_ANY
TIME_PERIODIC ::= (STAR SLASH NUMBER)
{
    pin=2
}
TIME_RANGE ::= NUMBER HYPHEN NUMBER
{
    pin=2
    extends="com.github.xepozz.crontab.language.psi.impl.CrontabTimeRangeBaseImpl"
    methods=[getFirst getSecond getIntRange]
}
TIME_RANGE_STEP ::= NUMBER SLASH NUMBER
{
    pin=2
}
TIME_LIST ::= TIME_LIST_ITEM (COMMA TIME_LIST_ITEM)*
{
    pin=2
}
TIME_LIST_ITEM ::= TIME_RANGE | TIME_EXACT

TIME_ANY ::= STAR
TIME_EXACT ::= NUMBER

COMMAND ::= CONTENT
{
    implements=["com.intellij.psi.PsiLanguageInjectionHost"]
    extends="com.github.xepozz.crontab.language.psi.impl.CrontabCommandBaseImpl"
}

COMMENT ::= SINGLE_COMMENT
